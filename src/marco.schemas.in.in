<mateconfschemafile>
  <schemalist>

    <!-- General preferences -->

    <schema>
      <key>/schemas/apps/marco/general/mouse_button_modifier</key>
      <applyto>/apps/marco/general/mouse_button_modifier</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>&lt;Alt&gt;</default>
      <locale name="C">
         <short>Modifier to use for modified window click actions</short>
         <long>
           Clicking a window while holding down this modifier key
           will move the window (left click), resize the window
           (middle click), or show the window menu (right click).
           The middle and right click operations may be swapped
           using the "resize_with_right_button" key.
           Modifier is expressed as "&lt;Alt&gt;" or "&lt;Super&gt;"
           for example.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/resize_with_right_button</key>
      <applyto>/apps/marco/general/resize_with_right_button</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>true</default>
      <locale name="C">
         <short>Whether to resize with the right button</short>
         <long>
           Set this to true to resize with the right button and show a menu
           with the middle button while holding down the key given in
           "mouse_button_modifier"; set it to false to make it work the
           opposite way around.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/button_layout</key>
      <applyto>/apps/marco/general/button_layout</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>menu:minimize,maximize,close</default>
      <locale name="C">
         <short>Arrangement of buttons on the titlebar</short>
         <long>
           Arrangement of buttons on the titlebar. The
           value should be a string, such as
           "menu:minimize,maximize,spacer,close"; the colon separates the
           left corner of the window from the right corner, and
           the button names are comma-separated. Duplicate buttons
           are not allowed. Unknown button names are silently ignored
           so that buttons can be added in future marco versions
           without breaking older versions.
           A special spacer tag can be used to insert some space between
           two adjacent buttons.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/focus_mode</key>
      <applyto>/apps/marco/general/focus_mode</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>click</default>
      <locale name="C">
        <short>Window focus mode</short>
        <long>
          The window focus mode indicates how windows are activated.
          It has three possible values; "click" means windows must
          be clicked in order to focus them, "sloppy" means windows
          are focused when the mouse enters the window, and "mouse" means
          windows are focused when the mouse enters the window and
          unfocused when the mouse leaves the window.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/focus_new_windows</key>
      <applyto>/apps/marco/general/focus_new_windows</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>smart</default>
      <locale name="C">
         <short>Control how new windows get focus</short>
         <long>
          This option provides additional control over how newly created
          windows get focus.  It has two possible values; "smart" applies
          the user's normal focus mode, and "strict" results in windows
          started from a terminal not being given focus.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/raise_on_click</key>
      <applyto>/apps/marco/general/raise_on_click</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>true</default>
      <locale name="C">
         <short>Whether raising should be a side-effect of other user
                interactions</short>
         <long>
           Setting this option to false can lead to buggy behavior, so
           users are strongly discouraged from changing it from the default
           of true.

           Many actions (e.g. clicking in the client area, moving or resizing the window)
           normally raise the window as a side-effect. Setting this option to false, which
           is strongly discouraged, will decouple raising from other user actions, and
           ignore raise requests generated by applications. See
           http://bugzilla.gnome.org/show_bug.cgi?id=445447#c6.
           Even when this option is false, windows can
           still be raised by an alt-left-click anywhere on the window, a
           normal click on the window decorations, or by special messages
           from pagers, such as activation requests from tasklist applets.
           This option is currently disabled in click-to-focus mode.

           Note that the list of ways to raise windows when raise_on_click
           is false does not include programmatic requests from
           applications to raise windows; such requests will be ignored
           regardless of the reason for the request.  If you are an
           application developer and have a user complaining that your
           application does not work with this setting disabled, tell them
           it is _their_ fault for breaking their window manager and that
           they need to change this option back to true or live with the
           "bug" they requested.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/action_double_click_titlebar</key>
      <applyto>/apps/marco/general/action_double_click_titlebar</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>toggle_maximize</default>
      <locale name="C">
         <short>Action on title bar double-click</short>
         <long>
           This option determines the effects of double-clicking on the
           title bar.  Current valid options are
	   'toggle_shade', which will shade/unshade the window,
	   'toggle_maximize' which will maximize/unmaximize the window,
	   'toggle_maximize_horizontally' and 'toggle_maximize_vertically'
	   which will maximize/unmaximize the window in that direction only,
	   'minimize' which will minimize the window,
	   'shade' which will roll the window up,
	   'menu' which will display the window menu,
	   'lower' which will put the window behind all the others,
	   and 'none' which will not do anything.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/action_middle_click_titlebar</key>
      <applyto>/apps/marco/general/action_middle_click_titlebar</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>lower</default>
      <locale name="C">
         <short>Action on title bar middle-click</short>
         <long>
           This option determines the effects of middle-clicking on the
           title bar.  Current valid options are
	   'toggle_shade', which will shade/unshade the window,
	   'toggle_maximize' which will maximize/unmaximize the window,
	   'toggle_maximize_horizontally' and 'toggle_maximize_vertically'
	   which will maximize/unmaximize the window in that direction only,
	   'minimize' which will minimize the window,
	   'shade' which will roll the window up,
	   'menu' which will display the window menu,
	   'lower' which will put the window behind all the others,
	   and 'none' which will not do anything.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/action_right_click_titlebar</key>
      <applyto>/apps/marco/general/action_right_click_titlebar</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>menu</default>
      <locale name="C">
         <short>Action on title bar right-click</short>
         <long>
           This option determines the effects of right-clicking on the
           title bar.  Current valid options are
	   'toggle_shade', which will shade/unshade the window,
	   'toggle_maximize' which will maximize/unmaximize the window,
	   'toggle_maximize_horizontally' and 'toggle_maximize_vertically'
	   which will maximize/unmaximize the window in that direction only,
	   'minimize' which will minimize the window,
	   'shade' which will roll the window up,
	   'menu' which will display the window menu,
	   'lower' which will put the window behind all the others,
	   and 'none' which will not do anything.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/auto_raise</key>
      <applyto>/apps/marco/general/auto_raise</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
        <short>Automatically raises the focused window</short>
        <long>
          If set to true, and the focus mode is either "sloppy" or "mouse"
          then the focused window will be automatically raised after a
          delay specified by the auto_raise_delay key. This is not related
          to clicking on a window to raise it, nor to entering a window
          during drag-and-drop.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/auto_raise_delay</key>
      <applyto>/apps/marco/general/auto_raise_delay</applyto>
      <owner>marco</owner>
      <type>int</type>
      <default>500</default>
      <locale name="C">
        <short>Delay in milliseconds for the auto raise option</short>
        <long>
          The time delay before raising a window if auto_raise is set to
          true. The delay is given in thousandths of a second.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/theme</key>
      <applyto>/apps/marco/general/theme</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>Spidey-Left</default>
      <locale name="C">
         <short>Current theme</short>
         <long>
          The theme determines the appearance of window borders,
          titlebar, and so forth.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/titlebar_uses_system_font</key>
      <applyto>/apps/marco/general/titlebar_uses_system_font</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
         <short>Use standard system font in window titles</short>
         <long>
          If true, ignore the titlebar_font
          option, and use the standard application font for window
          titles.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/titlebar_font</key>
      <applyto>/apps/marco/general/titlebar_font</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>Sans Bold 10</default>
      <locale name="C">
        <short>Window title font</short>
        <long>
          A font description string describing a font for window
          titlebars. The size from the description will only be used if the
          titlebar_font_size option is set to 0. Also, this option is
          disabled if the titlebar_uses_desktop_font option is set to true.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/num_workspaces</key>
      <applyto>/apps/marco/general/num_workspaces</applyto>
      <owner>marco</owner>
      <type>int</type>
      <default>4</default>
      <locale name="C">
        <short>Number of workspaces</short>
        <long>
          Number of workspaces. Must be more than zero, and has a fixed
          maximum to prevent making the desktop unusable by accidentally
          asking for too many workspaces.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/wrap_style</key>
      <applyto>/apps/marco/general/wrap_style</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>no wrap</default>
      <locale name="C">
         <short>Workspace wrap style</short>
         <long>
         The wrap style is used to determine how to switch from one
         workspace to another at the border of the workspace switcher.
         When set to "no wrap", nothing will happen if you try to
         switch to a workspace past the border of the workspace switcher.
         If set to "classic", the old marco behavior is used:
         the end of one row leads to the beginning of the next and
         the end of a column leads to the beginning of the next.
         If set to "toroidal", workspaces are connected like a doughnut:
         the end of each row leads to its own beginning and the
         end of each column leads to its own beginning.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/visual_bell</key>
      <applyto>/apps/marco/general/visual_bell</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
        <short>Enable Visual Bell</short>
        <long>
          Turns on a visual indication when an application or the system
          issues a 'bell' or 'beep'; useful for the hard-of-hearing and for
          use in noisy environments.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/audible_bell</key>
      <applyto>/apps/marco/general/audible_bell</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>true</default>
      <locale name="C">
        <short>System Bell is Audible</short>
        <long>
          Determines whether applications or the system can generate
          audible 'beeps'; may be used in conjunction with 'visual bell' to
          allow silent 'beeps'.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/visual_bell_type</key>
      <applyto>/apps/marco/general/visual_bell_type</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>fullscreen</default>
      <locale name="C">
        <short>Visual Bell Type</short>
        <long>
          Tells Marco how to implement the visual indication that the
          system bell or another application 'bell' indicator has been
          rung.  Currently there are two valid values, "fullscreen", which
          causes a fullscreen white-black flash, and "frame_flash" which
          causes the titlebar of the application which sent the bell signal
          to flash.  If the application which sent the bell is unknown (as
          is usually the case for the default "system beep"), the currently
          focused window's titlebar is flashed.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/compositing_manager</key>
      <applyto>/apps/marco/general/compositing_manager</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
        <short>Compositing Manager</short>
        <long>
          Determines whether Marco is a compositing manager.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/workspace_names/name</key>
      <applyto>/apps/marco/workspace_names/name_1</applyto>
      <applyto>/apps/marco/workspace_names/name_2</applyto>
      <applyto>/apps/marco/workspace_names/name_3</applyto>
      <applyto>/apps/marco/workspace_names/name_4</applyto>
      <applyto>/apps/marco/workspace_names/name_5</applyto>
      <applyto>/apps/marco/workspace_names/name_6</applyto>
      <applyto>/apps/marco/workspace_names/name_7</applyto>
      <applyto>/apps/marco/workspace_names/name_8</applyto>
      <applyto>/apps/marco/workspace_names/name_9</applyto>
      <applyto>/apps/marco/workspace_names/name_10</applyto>
      <applyto>/apps/marco/workspace_names/name_11</applyto>
      <applyto>/apps/marco/workspace_names/name_12</applyto>
      <applyto>/apps/marco/workspace_names/name_13</applyto>
      <applyto>/apps/marco/workspace_names/name_14</applyto>
      <applyto>/apps/marco/workspace_names/name_15</applyto>
      <applyto>/apps/marco/workspace_names/name_16</applyto>
      <applyto>/apps/marco/workspace_names/name_17</applyto>
      <applyto>/apps/marco/workspace_names/name_18</applyto>
      <applyto>/apps/marco/workspace_names/name_19</applyto>
      <applyto>/apps/marco/workspace_names/name_20</applyto>
      <applyto>/apps/marco/workspace_names/name_21</applyto>
      <applyto>/apps/marco/workspace_names/name_22</applyto>
      <applyto>/apps/marco/workspace_names/name_23</applyto>
      <applyto>/apps/marco/workspace_names/name_24</applyto>
      <applyto>/apps/marco/workspace_names/name_25</applyto>
      <applyto>/apps/marco/workspace_names/name_26</applyto>
      <applyto>/apps/marco/workspace_names/name_27</applyto>
      <applyto>/apps/marco/workspace_names/name_28</applyto>
      <applyto>/apps/marco/workspace_names/name_29</applyto>
      <applyto>/apps/marco/workspace_names/name_30</applyto>
      <applyto>/apps/marco/workspace_names/name_31</applyto>
      <applyto>/apps/marco/workspace_names/name_32</applyto>
      <applyto>/apps/marco/workspace_names/name_33</applyto>
      <applyto>/apps/marco/workspace_names/name_34</applyto>
      <applyto>/apps/marco/workspace_names/name_35</applyto>
      <applyto>/apps/marco/workspace_names/name_36</applyto>
      <owner>marco</owner>

      <owner>marco</owner>
      <type>string</type>
      <default></default>
      <locale name="C">
         <short>Name of workspace</short>
         <long>
          The name of a workspace.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/reduced_resources</key>
      <applyto>/apps/marco/general/reduced_resources</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
         <short>If true, trade off usability for less resource usage</short>
         <long>
           If true, marco will give the user less feedback by using
           wireframes, avoiding animations, or other means.  This is a
           significant reduction in usability for many users, but may allow
           legacy applications to continue working, and may also be a
           useful tradeoff for terminal servers.  However, the wireframe
           feature is disabled when accessibility is on.
         </long>
      </locale>
    </schema>

    <!-- Keybindings -->

    <schema>
      <key>/schemas/apps/marco/global_keybindings/run_command</key>
      <applyto>/apps/marco/global_keybindings/run_command_1</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_2</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_3</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_4</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_5</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_6</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_7</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_8</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_9</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_10</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_11</applyto>
      <applyto>/apps/marco/global_keybindings/run_command_12</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>disabled</default>
      <locale name="C">
         <short>Run a defined command</short>
         <long>
          The keybinding that runs the correspondingly-numbered
          command in /apps/marco/keybinding_commands

          The format looks like "&lt;Control&gt;a" or
          "&lt;Shift&gt;&lt;Alt&gt;F1".

          The parser is fairly liberal and allows lower or upper case,
          and also abbreviations such as "&lt;Ctl&gt;" and
          "&lt;Ctrl&gt;". If you set the option to the special string
          "disabled", then there will be no keybinding for this
          action.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/keybinding_commands/command</key>
      <applyto>/apps/marco/keybinding_commands/command_1</applyto>
      <applyto>/apps/marco/keybinding_commands/command_2</applyto>
      <applyto>/apps/marco/keybinding_commands/command_3</applyto>
      <applyto>/apps/marco/keybinding_commands/command_4</applyto>
      <applyto>/apps/marco/keybinding_commands/command_5</applyto>
      <applyto>/apps/marco/keybinding_commands/command_6</applyto>
      <applyto>/apps/marco/keybinding_commands/command_7</applyto>
      <applyto>/apps/marco/keybinding_commands/command_8</applyto>
      <applyto>/apps/marco/keybinding_commands/command_9</applyto>
      <applyto>/apps/marco/keybinding_commands/command_10</applyto>
      <applyto>/apps/marco/keybinding_commands/command_11</applyto>
      <applyto>/apps/marco/keybinding_commands/command_12</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default> </default>
      <locale name="C">
         <short>Commands to run in response to keybindings</short>
         <long>
         The /apps/marco/global_keybindings/run_command_N
         keys define keybindings that correspond to these commands.
         Pressing the keybinding for run_command_N will
         execute command_N.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/keybinding_commands/command_screenshot</key>
      <applyto>/apps/marco/keybinding_commands/command_screenshot</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>mate-screenshot</default>
      <locale name="C">
         <short>The screenshot command</short>
         <long>
         The /apps/marco/global_keybindings/run_command_screenshot
         key defines a keybinding which causes the command specified
         by this setting to be invoked.
         </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/keybinding_commands/command_window_screenshot</key>
      <applyto>/apps/marco/keybinding_commands/command_window_screenshot</applyto>
      <owner>marco</owner>
      <type>string</type>
      <default>mate-screenshot --window</default>
      <locale name="C">
         <short>The window screenshot command</short>
         <long>
         The /apps/marco/global_keybindings/run_command_window_screenshot
         key defines a keybinding which causes the command specified
         by this setting to be invoked.
         </long>
      </locale>
    </schema>

    <!-- Schemas below are generated by schema-bindings.c when this file
         becomes marco.schemas.in
    -->
    <!-- GENERATED -->

    <!-- Not used and/or crackrock -->

    <schema>
      <key>/schemas/apps/marco/general/application_based</key>
      <applyto>/apps/marco/general/application_based</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
        <short>(Not implemented) Navigation works in terms of applications not windows</short>
        <long>
          If true, then Marco works in terms of applications rather than
          windows. The concept is a bit abstract, but in general an
          application-based setup is more like the Mac and less like
          Windows. When you focus a window in application-based mode, all
          the windows in the application will be raised. Also, in
          application-based mode, focus clicks are not passed through to
          windows in other applications. Application-based mode is,
          however, largely unimplemented at the moment.
        </long>
      </locale>
    </schema>

    <schema>
      <key>/schemas/apps/marco/general/disable_workarounds</key>
      <applyto>/apps/marco/general/disable_workarounds</applyto>
      <owner>marco</owner>
      <type>bool</type>
      <default>false</default>
      <locale name="C">
        <short>Disable misfeatures that are required by old or broken
               applications</short>
        <long>
          Some applications disregard specifications in ways that result in
          window manager misfeatures. This option puts Marco in a
          rigorously correct mode, which gives a more consistent user
          interface, provided one does not need to run any misbehaving
          applications.
        </long>
      </locale>
    </schema>

  </schemalist>
</mateconfschemafile>




